
--Give the name and the per capita GDP for those countries with a population of at least 200 million.
SELECT name,gdp/population
 FROM world
WHERE population > 200000000

-- Show the countries which have a name that includes the word 'United'
select name 
from world
where name like '%United%';

--Exclusive OR (XOR). 
--Show the countries that are big by area (more than 3 million) or big by population (more than 250 million) but not both.
--Show name, population and area.
select name, population, area
from world
where area > 3000000 xor population > 250000000

--Show per-capita GDP for the trillion dollar countries to the nearest $1000.
select name, round(GDP/population,-3)
from world
where GDP > 1000000000000

-- Find all details of the prize won by EUGENE O'NEILL
select * from nobel
where winner = 'EUGENE O''NEILL'

--Show the 1984 winners and subject ordered by subject and winner name; 
--but list Chemistry and Physics last.
SELECT winner, subject
FROM nobel
WHERE yr=1984
ORDER BY subject IN ('Physics','Chemistry'), subject, winner

--Show the name and the population of each country in Europe.
--Show the population as a percentage of the population of Germany
SELECT name,CONCAT(CAST(ROUND(population*100/(SELECT population FROM world WHERE name ='Germany'),0) AS varchar(20)) , '%')  as percentage
FROM world
WHERE continent = 'Europe'

--Find the largest country (by area) in each continent
--show the continent, the name and the area
SELECT x.continent, x.name, x.area FROM world x
  WHERE x.area >= ALL
    (SELECT y.area FROM world y
        WHERE y.continent=x.continent
          AND y.area>0)

--List each continent and the name of the country that comes first alphabetically.
SELECT x.continent, x.name 
FROM world x
WHERE x.name <= ALL(SELECT y.name FROM world y WHERE y.continent = 
x.continent)

--Find the continents where all countries have a population <= 25000000.
--Then find the names of the countries associated with these continents.
--Show name, continent and population.
SELECT name,continent,population  FROM world r WHERE continent IN
(SELECT continent FROM world x
WHERE NOT EXISTS (SELECT * FROM world y WHERE x.continent  = y.continent AND population > 25000000))

--Some countries have populations more than three times that of all of their neighbours (in the same continent).
--Give the countries and continents.
SELECT name,continent FROM world x
WHERE population/3 >= ALL (SELECT population FROM world y
                         WHERE y.continent  = x.continent 
                          AND y.name <> x.name)


--List the continents that have a total population of at least 100 million.
SELECT continent
FROM world
GROUP BY (continent)
HAVING SUM(population) > 100000000

--List the dates of the matches and the name of the team in which 'Fernando Santos' was the team1 coach.
SELECT mdate, t1.teamname 
FROM game 
JOIN eteam t1 ON (team1 = t1.id)
JOIN eteam t2 ON (team2 = t2.id)
AND t1.coach = 'Fernando Santos'

--List the player for every goal scored in a game where the stadium was 'National Stadium, Warsaw'
SELECT player
FROM game 
JOIN goal ON(id = matchid)
WHERE stadium = 'National Stadium, Warsaw'


-- List every match with the goals scored by each team as shown
SELECT mdate,
  team1,
  SUM(CASE WHEN teamid=team1 THEN 1 ELSE 0 END) score1,
  team2,
  SUM(CASE WHEN teamid=team2 THEN 1 ELSE 0 END) score2
  FROM game JOIN goal ON matchid = id
GROUP BY mdate,team1,team2
ORDER BY mdate,matchid,team1,team2

--Obtain the cast list for the film 'Alien'
SELECT a.name
FROM casting c
JOIN movie m ON c.movieid = m.id
JOIN actor a ON c.actorid = a.id
WHERE m.title =  'Alien'

--Which were the busiest years for 'Rock Hudson'
--show the year and the number of movies he made each year for any year in which he made more than 2 movies.
SELECT yr,COUNT(title) FROM
  movie JOIN casting ON movie.id=movieid
        JOIN actor   ON actorid=actor.id
WHERE name='Rock Hudson'
GROUP BY yr
HAVING COUNT(title) > 2

--List the film title and the leading actor for all of the films 'Julie Andrews' played in.
SELECT DISTINCT m.title, a.name
FROM casting c
JOIN movie m ON c.movieid = m.id
JOIN actor a ON c.actorid = a.id
WHERE m.id IN(
SELECT movieid FROM casting
WHERE actorid IN (
  SELECT id FROM actor
  WHERE name='Julie Andrews'))
AND c.ord = 1

--Obtain a list, in alphabetical order, of actors who've had at least 15 starring roles
SELECT a.name
FROM casting c JOIN actor a ON (c.actorid = a.id)
WHERE c.ord = 1
GROUP BY a.name
HAVING COUNT(a.name) >= 15
ORDER BY a.name

--List the films released in the year 1978 ordered by the number of actors in the cast, then by title.
SELECT m.title, COUNT(c.actorid)
FROM movie m JOIN casting c ON (c.movieid = m.id)
WHERE yr = 1978 
GROUP BY  m.title
ORDER BY COUNT(c.actorid) desc,m.title


--List all the people who have worked with 'Art Garfunkel'.
SELECT name FROM casting JOIN actor ON (actorid = id) WHERE name <> 'Art Garfunkel' AND movieid IN( 
SELECT c.movieid FROM
casting c WHERE actorid IN( 
SELECT a.id
FROM actor a
WHERE a.name =  'Art Garfunkel'))

--Use COUNT and GROUP BY dept.name to show each department and the number of staff
--Use a RIGHT JOIN to ensure that the Engineering department is listed
select d.name, count(t.name)
from teacher t right join dept d
on (t.dept = d.Id)
group by d.name

--Use CASE to show the name of each teacher followed by 'Sci' if the teacher is in dept 1 or 2
--show 'Art' if the teacher's dept is 3 and 'None' otherwise.
SELECT t.name, 
CASE 
WHEN t.dept = 1 OR t.dept = 2 THEN 'Sci'
WHEN t.dept = 3 THEN 'Art'
ELSE 'None' END
FROM teacher t









































-- 1.the population of Germany
SELECT population FROM world
  WHERE name = 'Germany';